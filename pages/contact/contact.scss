// Make something like a digital contact libreta?
@import '../../scss/variables';
@import '../../scss/mixins';
@import '../../scss/globals';
@import '../../scss/font-anim-keyframes';

body {
  height: 95vh;
}
.preloader {
  background: rgb(245, 245, 245);

  #emoji-loader {
    // emoji rotate when loading
    animation: none; //ease is funnier//linear
    position: relative;
    padding-right: 8vw;
    #frame1,
    #frame2,
    #frame3,
    #frame4 {
      position: absolute;
    }
    #frame1 {
      animation: gifFrame1 1.6s infinite ease;
    }
    #frame2 {
      animation: gifFrame2 1.6s infinite ease;
    }
    #frame3 {
      animation: gifFrame3 1.6s infinite ease;
    }
    #frame4 {
      animation: gifFrame4 1.6s infinite ease;
    }
  }
  #text-loader {
    // font-weight: 500;
    padding-top: 12rem;
    // font-family: $ff-recursive;
    // font-variation-settings: $MONO, $CASL, "wght" $font-weight-normal;
    animation: variableOpacity 2s infinite linear;
    color: $sutil-dark-purple-gray-color;
    // font-size: $font-size-small;
  }
}
.preload-finish {
  opacity: 0;
  pointer-events: none;
  #emoji-loader {
    // stop emoji rotate
    animation: none;
    #frame1,
    #frame2,
    #frame3,
    #frame4 {
      animation: none;
    }
  }
  #text-loader {
    animation: none;
  }
}
// ARROW BACK
.left-arrow {
  .link-a {
    color: $font-gray;
    &:hover {
      color: $font-gray;
    }
  }
}

.container {
  height: 100%;
  width: 100%;
  line-height: 1.5;
  display: grid;
  place-items: center;
  grid-template-columns: 1fr 60rem 1fr;
  grid-template-rows: 15% 1fr 10% 1fr 5%;
  h1 {
    grid-column: 2;
    grid-row: 1 /2;
    text-align: center;
    align-self: end;
    color: $light-gray;
    // margin-top: 3rem;
    font-variation-settings: 'MONO' 0.5, 'CASL' 0.1, 'wght' $font-weight-light;
  }
  p {
    grid-column: 2;
    text-align: center;
    color: $light-gray;
    --weight: 500;
    font-size: $font-size-normal;
    font-variation-settings: 'wght' var(--weight);
  }
  .p1 {
    grid-row: 2;
  }
  .p2 {
    grid-row: 4;
  }
  #mailFrame {
    grid-column: 2;
    grid-row: 3;
    a {
      text-decoration-color: $font-sutil-gray-color;
      transition: $trans-slow;
      &:hover {
        text-decoration-color: $font-black;
      }
      #mailText {
        font-variation-settings: 'MONO' 1, 'CASL' 0.2, 'wght' $font-weight-light;
        font-size: $font-size-normal;
        // font-family: "Ginto Variable";
        transition: font-variation-settings 0.5s ease;
        font-size: calc(3vw + 12px);
        user-select: none;
        color: $sutil-dark-purple-gray-color;
        // font-variation-settings: "wght" 400;
        &:hover {
          cursor: $cursor-contact-mail;
          font-variation-settings: 'MONO' 1, 'CASL' 0.01,
            'wght' $font-weight-lighter;
          color: $font-black;
        }
      }
    }
    //////wave hand
    div {
      display: none;
    }
    &:hover {
      div {
        font-size: calc(3vw + 40px);
        position: fixed;
        // position: relative;
        left: 45%; //40%
        top: 50%; //50%
        transform: translate(-50%, -50%);
        width: calc(3vw + 70px);
        height: calc(3vw + 70px);
        border-radius: 50%;
      }
      .wave {
        display: block;
        animation-name: waveHand;
        animation-duration: 3s;
        animation-iteration-count: infinite;
        transform-origin: 50% 50%;
      }
      // @keyframes waveHand {
      //   0% {
      //     transform: rotate(0deg);
      //   }
      //   10% {
      //     transform: rotate(20deg);
      //   }
      //   20% {
      //     transform: rotate(-10deg);
      //   }
      //   30% {
      //     transform: rotate(20deg);
      //   }
      //   40% {
      //     transform: rotate(-6deg);
      //   }
      //   50% {
      //     transform: rotate(12deg);
      //   }
      //   60% {
      //     transform: rotate(0deg);
      //   }
      //   100% {
      //     transform: rotate(0deg);
      //   }
      // }
    }
  }
}
